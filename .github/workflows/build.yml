name: CI build

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        version:
          - 5.14.1
        platform:
          - gcc_64
          - android
          #- wasm_32  # QtSql is currently not supported, see QTBUG-70505
          - msvc2017_64
          - msvc2017
          - winrt_x64_msvc2017
          - winrt_x86_msvc2017
          #- winrt_armv7_msvc2017  # Fails with MSVC2017 in VS2019
          - mingw73_64
          - mingw73_32
          - clang_64
          - ios

        include:
          - platform: gcc_64
            os: ubuntu-latest
            extrapkg: ",qtwebengine"
            examples: true
            docs: true
          - platform: android
            os: ubuntu-latest
          - platform: wasm_32
            os: ubuntu-latest
            emsdk: sdk-fastcomp-1.38.27-64bit
          - platform: msvc2017_64
            os: windows-latest
            extrapkg: ",qtwebengine"
          - platform: msvc2017
            os: windows-latest
            extrapkg: ",qtwebengine"
          - platform: winrt_x64_msvc2017
            os: windows-latest
          - platform: winrt_x86_msvc2017
            os: windows-latest
          - platform: winrt_armv7_msvc2017
            os: windows-latest
          - platform: mingw73_64
            os: windows-latest
            extrapkg: ",qtwebengine"
          - platform: mingw73_32
            os: windows-latest
            extrapkg: ",qtwebengine"
          - platform: clang_64
            os: macos-latest
            extrapkg: ",qtwebengine"
          - platform: ios
            os: macos-latest

    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - uses: actions/setup-python@v1
      - name: actions/cache emsdk
        uses: actions/cache@v1
        if: matrix.platform == 'wasm_32'
        with:
          path: emsdk-cache
          key: ${{runner.os}}-emsdk-${{matrix.emsdk}}
      - uses: mymindstorm/setup-emsdk@v3
        if: matrix.platform == 'wasm_32'
        with:
          version: ${{matrix.emsdk}}
          actions-cache-folder: emsdk-cache
      - name: actions/cache qt
        uses: actions/cache@v1
        id: cache-qt
        with:
          path: qt/${{matrix.version}}/${{matrix.platform}}
          key: qt-${{matrix.version}}-${{matrix.platform}}
      - uses: Skycoder42/action-setup-qt@master
        id: qt
        with:
          version: ${{matrix.version}}
          platform: ${{matrix.platform}}
          packages: qtnetworkauth,skycoder42.jsonserializer,skycoder42.restclient${{matrix.extrapkg}}
          flat-sources: https://install.skycoder42.de/qtmodules/
          cachedir: qt/${{matrix.version}}/${{matrix.platform}}
      - name: qmake
        run: |
          qmake CONFIG+=install_ok QT_PLATFORM=${{matrix.platform}}
          ${{steps.qt.outputs.make}} qmake_all
      - name: make module
        run: |
          ${{steps.qt.outputs.make}}
          ${{steps.qt.outputs.make}} INSTALL_ROOT="${{steps.qt.outputs.installdir}}" install
      - name: make tests
        if: steps.qt.outputs.tests == 'true'
        env:
          FIREBASE_PROJECT_ID: ${{secrets.FIREBASE_PROJECT_ID}}
          FIREBASE_API_KEY: ${{secrets.FIREBASE_API_KEY}}
        run: |
          ${{steps.qt.outputs.make}} all
          ${{steps.qt.outputs.make}} ${{steps.qt.outputs.testflags}} run-tests
      - name: make examples
        if: matrix.examples == 'true'
        run: |
          ${{steps.qt.outputs.make}} sub-examples
          cd examples && ${{steps.qt.outputs.make}} INSTALL_ROOT="${{steps.qt.outputs.installdir}}" install
      - name: make doc
        if: matrix.docs == 'true'
        run: |
          ${{steps.qt.outputs.make}} doxygen
          cd doc && ${{steps.qt.outputs.make}} INSTALL_ROOT="${{steps.qt.outputs.installdir}}" install
      - name: upload module to releases
        uses: Skycoder42/action-upload-release@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          directory: ${{steps.qt.outputs.outdir}}/${{matrix.version}}
          asset_name: qtdatasync-${{matrix.platform}}-${{matrix.version}}
          tag: ${{github.ref}}
          overwrite: true
      - name: upload examples to releases
        uses: Skycoder42/action-upload-release@master
        if: matrix.examples == 'true' && startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          directory: ${{steps.qt.outputs.outdir}}/${{matrix.version}}/${{matrix.platform}}/examples
          asset_name: qtdatasync-examples-${{matrix.version}}
          tag: ${{github.ref}}
          overwrite: true
      - name: upload doc to releases
        uses: Skycoder42/action-upload-release@master
        if: matrix.docs == 'true' && startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          directory: ${{steps.qt.outputs.outdir}}/${{matrix.version}}/${{matrix.platform}}/doc
          asset_name: qtdatasync-doc-${{matrix.version}}
          tag: ${{github.ref}}
          overwrite: true

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v1
      - uses: Skycoder42/action-deploy-qt@master
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          version: 5.14.1
          host: ${{secrets.SSHFS_HOST}}
          key: ${{secrets.SSHFS_KEY}}
          port: ${{secrets.SSHFS_PORT}}
